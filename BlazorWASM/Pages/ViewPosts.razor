@page "/ViewPosts"
@using Domain
@using Domain.DTOs
@using HttpClients.ClientInterfaces
@inject IPostService postService
@using UIComponents
@inject NavigationManager navMgr
<h3>Feed</h3>

  @if (showModal)
 {
     <Modal ShowModal="showModal">
         <div class="card">
             @if (posts == null)
             {
                 <label>Loading posts...</label>
             }
             else if (!posts.Any())
             {
                 <label>No posts</label>
             }
             else if (post == null)
             {
                 <label>Loading Posts data..</label>
             }
             else
             {
                 <h3>Title: @post.Title</h3>
                 <div class="form-group field">
                     <label>Content:@post.Content</label>
                 </div>
             }
             @if (!string.IsNullOrEmpty(msg))
             {
                 <label style="color: red">@msg</label>
             }
             
             <button class="btn btn-secondary close-button" @onclick="CloseModal">Close</button>
         </div>
     </Modal>
 } 



@code {
    private IEnumerable<Post>? posts;
    private string msg = "";
    private bool showModal = false;
    private PostBasicDTO post = null!;
   

    private async Task LoadPosts()
    {
        try
        {
            posts = await postService.GetAsync(null, null, null, null);
        }
        catch (Exception e)
        {
            Console.WriteLine(e);
            msg = e.Message;
        }
    }
    
    private async Task ViewPost(int id)
    {
        msg = "";
        try
        {
            PostBasicDTO result = await postService.GetPostByIdAsync(id);
            post = result;
            showModal = true;
        }
        catch (Exception e)
        {
            Console.WriteLine(e);
            throw;
        }
    }

    private void CloseModal()
    {
        showModal = false;
    }
    
}







<div>
    <button @onclick="LoadPosts">Load</button>
</div>

<div class="post-container">
    
    @if (!string.IsNullOrEmpty(msg))
    {
        <label style="color: red">@msg</label>
    }
    @if (posts == null)
    {
        <span>Loading..</span>
    }
    else if (!posts.Any())
    {
        <span>No posts</span>
    }
    else
    {
        <ul class="post-list">
            @foreach (var post in posts)
            {
                <div class="post-item" @onclick="() => ViewPost(post.Id)">
                    <label class="post-title">@post.Title</label>
                    <div class="post-content">@post.Content</div>
                    <div class="post-username">Posted by: @post.Owner.UserName</div>
                </div>
            }
        </ul>
    }

</div>
